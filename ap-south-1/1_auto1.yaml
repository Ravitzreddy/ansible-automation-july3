---
  - hosts: localhost
    connection: local
    become: true
    #vars:
    #  vpcs:
    #    - vpcname: VPC-A
    #      configurations:
    #        - vpccidr: 10.0.0.0/16
    #          vpcregion: ap-south-1
    #    - vpcname: VPC-B
    #      configurations:
    #        - vpccidr: 10.1.0.0/16
    #          vpcregion: us-west-1
    tasks:
      #- name: create a keypair for apsouth1reg
      #  ec2_key:
      #    name: "{{item.0.kpname}}"
      #    region: "{{item.1.kpregion}}"
      #  register: ec2_key_result
      #  with_subelements:
      #    - "{{createkeypair}}"
      #    - cons
 
      #- name: Save private key
      #  copy: content="{{ec2_key_result.key.private_key}}" dest="/root/.aws/"{{item.0.kpname}}".pem" mode=0600
      #  when: ec2_key_result.changed
      #  with_subelements:
      #    - "{{createkeypair}}"
      #    - cons
        


      - name: create vpc for "{{ item.vname }}"
        ec2_vpc_net:
          name: "{{ item.0.vpcname }}"
          state: present
          cidr_block: "{{ item.1.vpccidr }}"
          region: "{{ item.1.vpcregion }}"
        register: create_vpc
        with_subelements:
          - "{{vpcs}}"
          - configurations

      - name: "setfacts"
        set_fact:
          vpc_ids: "{{ vpc_ids | default({}) | combine({ item.vpc.tags.Name: item.vpc.id }) }}"
        loop: "{{ create_vpc.results }}"


      - name: debugsetfacts
        debug:
          msg: "{{ vpc_ids }}"

      # Create Internet gateway to list of vpcs in vpc_ids
      - name: create internetgateway
        ec2_vpc_igw:
          vpc_id: "{{ item.vpc.id }}"
          region: "{{ item.invocation.module_args.region }}"
          state: present
          tags:
            Name: "{{item.vpc.tags.Name|lower}}-IGW"
        register: create_vpcigw
        loop: "{{ create_vpc.results }}"


      # Display content to dict variables igws
      - name: debugcreate_vpcigw
        set_fact:
          igw_ids: "{{ igw_ids | default({}) | combine({ item.tags.Name: item.gateway_id  }) }}"
        loop: "{{ create_vpcigw.results }}"

      # Display igw_ids
      - name: debugigw_ids
        debug:
          msg: "{{ igw_ids }}"


      # Copy var file all1.yaml to all2.yaml
      - name: copy files all1.yaml to all2.yaml
        copy:
          src: /etc/ansible/ap-south-1/group_vars/all1.yaml
          dest: /etc/ansible/ap-south-1/group_vars/all2.yaml
          follow: yes 
   
      # replace function 
      - name: replace VPC-A VPC-B with VPC-ids
        replace:
          path: /etc/ansible/ap-south-1/group_vars/all2.yaml
          regexp: "{{ item.key }}"
          replace: "{{ item.value }}"
        with_dict: "{{ vpc_ids }}"

      # replace function for IGW routes
      - name: replace vpc-a-igw and vpc-b-igw in var file all2.yaml
        replace:
          path: /etc/ansible/ap-south-1/group_vars/all2.yaml
          regexp: "{{ item.key }}"
          replace: "{{ item.value }}"
        with_dict: "{{igw_ids}}"  



      # Create SN
      #- name: execute bash command to execute playbbok of subnet
      #  shell: AWS_PROFILE=personal ansible-playbook -i /etc/ansible/ec2.py /etc/ansible/ap-south-1/auto-subnets.yaml -e @/etc/ansible/ap-south-1/group_vars/all2.yaml -vvvv
      #  register: shell_sn


    
